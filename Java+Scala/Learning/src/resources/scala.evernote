	* return yield in collection does not provide deferred release of items
	* tail-recursion and recursion itself compilation http://blog.emielhollander.nl/2012/12/tail-recursion-and-the-accumulator-in-scala/
	* lazy - related to thread-safe
	* speed  http://benchmarksgame.alioth.debian.org/u64q/which-programs-are-best.php?
	* use method() for mutator and w/o for methods which does not change object state
	* inner class type depends on outer class instance. E.g. class Outer { class Inner {}; def create: Inner = {...}}; var i = new Outer().Create; i = new Outer().Create - fails
	* 
		* it works when Outer#Inner is used, e.g. var i1: Outer#Inner = new Outer().Create


